{"version":3,"sources":["Store.js","App.jsx","Episode.jsx","EpisodeList.jsx","Root.jsx","index.js"],"names":["setFavorites","favorites","localStorage","setItem","JSON","stringify","Store","createContext","initialState","episodes","result","getItem","parse","getFavorites","reducer","state","action","type","concat","Object","toConsumableArray","payload","objectSpread","filter","id","App","_ref","children","_useContext","useContext","dispatch","fetchEpisodes","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee","data","json","wrap","_context","prev","next","length","abrupt","fetch","sent","_embedded","stop","apply","this","arguments","useEffect","react_default","createElement","Fragment","className","es","to","Episode","favorite","zeroPad","number","size","undefined","toString","push","join","classes","src","image","medium","alt","name","season","onClick","episodeId","includes","toggleFavorite","EpisodeList","map","episode","src_Episode","find","key","Root","src_App","path","src_EpisodeList","e","componentTree","props","_useReducer","useReducer","_useReducer2","slicedToArray","value","Provider","src_Root","ReactDOM","render","document","getElementById"],"mappings":"mPASMA,EAAe,SAAAC,GACnB,OAAOC,aAAaC,QAAQ,YAAaC,KAAKC,UAAUJ,KAMpDK,EAAQC,0BAERC,EAAe,CACnBC,SAAU,GACVR,UAjBmB,SAAAA,GACnB,IAAMS,EAASR,aAAaS,QAAQ,aACpC,OAAKD,EACEN,KAAKQ,MAAMF,GADE,GAeTG,IAMPC,EAAU,SAACC,EAAOC,GACtB,IAAIf,EACJ,OAAQe,EAAOC,MACb,IAAK,eAGH,OAFAhB,EAAS,GAAAiB,OAAAC,OAAAC,EAAA,EAAAD,CAAOJ,EAAMd,WAAb,CAAwBe,EAAOK,UACxCrB,EAAaC,GACNkB,OAAAG,EAAA,EAAAH,CAAA,GAAKJ,EAAZ,CAAmBd,cACrB,IAAK,iBACH,OAAOkB,OAAAG,EAAA,EAAAH,CAAA,GAAKJ,EAAZ,CAAmBN,SAAUO,EAAOK,UACtC,IAAK,kBAGH,OAFApB,EAAYc,EAAMd,UAAUsB,OAAO,SAAAC,GAAE,OAAIA,IAAOR,EAAOK,UACvDrB,EAAaC,GACNkB,OAAAG,EAAA,EAAAH,CAAA,GAAKJ,EAAZ,CAAmBd,cACrB,QACE,OAAOc,IAmBET,ICXAmB,EA5CH,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SAAeC,EACAC,qBAAWvB,GAA/BS,EADoBa,EACpBb,MAAOe,EADaF,EACbE,SAETC,EAAa,eAAAC,EAAAb,OAAAc,EAAA,EAAAd,CAAAe,EAAAC,EAAAC,KAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAvB,EAAA,OAAAkB,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,YAChB5B,EAAMN,SAASmC,OAAS,GADR,CAAAH,EAAAE,KAAA,eAAAF,EAAAI,OAAA,UACkB,GADlB,cAAAJ,EAAAE,KAAA,EAIDG,MADjB,uEAHkB,cAIdR,EAJcG,EAAAM,KAAAN,EAAAE,KAAA,EAKDL,EAAKC,OALJ,cAKdA,EALcE,EAAAM,KAMd/B,EAAS,CACbC,KAAM,iBACNI,QAASkB,EAAKS,UAAUvC,UARNgC,EAAAI,OAAA,SAUbf,EAASd,IAVI,yBAAAyB,EAAAQ,SAAAZ,MAAH,yBAAAL,EAAAkB,MAAAC,KAAAC,YAAA,GAmBnB,OAJAC,oBAAU,WACRtB,MAIAuB,EAAAnB,EAAAoB,cAAAD,EAAAnB,EAAAqB,SAAA,KACEF,EAAAnB,EAAAoB,cAAA,UAAQE,UAAU,UAChBH,EAAAnB,EAAAoB,cAAA,WACED,EAAAnB,EAAAoB,cAAA,sBACAD,EAAAnB,EAAAoB,cAAA,yCAEFD,EAAAnB,EAAAoB,cAAA,MAAIE,UAAU,cACZH,EAAAnB,EAAAoB,cAAA,UACED,EAAAnB,EAAAoB,cAACG,EAAA,EAAD,CAAMC,GAAG,KAAT,iBAEFL,EAAAnB,EAAAoB,cAAA,UACED,EAAAnB,EAAAoB,cAACG,EAAA,EAAD,CAAMC,GAAG,cAAc5C,EAAMd,UAAU2C,OAAvC,mBAKLjB,ICOQiC,EA/CC,SAAAlC,GAAwB,IAArBY,EAAqBZ,EAArBY,KAAMuB,EAAenC,EAAfmC,SAAejC,EACVC,qBAAWvB,GAA/BS,EAD8Ba,EAC9Bb,MAAOe,EADuBF,EACvBE,SAwBTgC,EAAU,SAACC,GAEf,IAFoC,IAAbC,EAAaZ,UAAAR,OAAA,QAAAqB,IAAAb,UAAA,GAAAA,UAAA,GAAN,EAC1B1C,EAASqD,EAAOG,WACbxD,EAAOkC,OAASoB,GACrBtD,EAAM,IAAAQ,OAAOR,GAEf,OAAOA,GAGT,OACE4C,EAAAnB,EAAAoB,cAAA,WAASE,UA/BK,WACd,IAAI/C,EAAS,CAAC,eAId,OAHImD,GACFnD,EAAOyD,KAAK,oBAEPzD,EAAO0D,KAAK,KA0BCC,IAClBf,EAAAnB,EAAAoB,cAAA,OAAKe,IAAKhC,EAAKiC,MAAMC,OAAQC,IAAG,qBAAAvD,OAAuBoB,EAAKoC,QAC5DpB,EAAAnB,EAAAoB,cAAA,WAAMjB,EAAKoC,MACXpB,EAAAnB,EAAAoB,cAAA,WAASE,UAAU,mBACjBH,EAAAnB,EAAAoB,cAAA,WA1BJ,IAAArC,OAAW4C,EAAQxB,EAAKqC,QAAxB,KAAAzD,OAAmC4C,EAAQxB,EAAKyB,UA2B5CT,EAAAnB,EAAAoB,cAAA,UAAQtC,KAAK,SAAS2D,QAAS,kBAxBd,SAAAC,GACrB,IAAI7D,EAAS,CAAEK,QAASwD,GAMxB,OALI9D,EAAMd,UAAU6E,SAASD,GAC3B7D,EAAOC,KAAO,kBAEdD,EAAOC,KAAO,eAETa,EAASd,GAiByB+D,CAAezC,EAAKd,MACtDqC,EAAW,aAAe,mBCrBtBmB,EAnBK,SAAAtD,GAA6B,IAA1BjB,EAA0BiB,EAA1BjB,SAAUR,EAAgByB,EAAhBzB,UAK/B,OACEqD,EAAAnB,EAAAoB,cAAA,WAASE,UAAU,kBAChBhD,EAASwE,IAAI,SAAAC,GAAO,OACnB5B,EAAAnB,EAAAoB,cAAC4B,EAAD,CACE7C,KAAM4C,EACNrB,UATWgB,EASUK,EAAQ1D,GAR5BvB,EAAUmF,KAAK,SAAA5D,GAAE,OAAIA,IAAOqD,KAS7BQ,IAAKH,EAAQ1D,KAVF,IAAAqD,IAKjB,MCyBWS,EA5BF,WAAM,IACTvE,EAAUc,qBAAWvB,GAArBS,MASR,OACEuC,EAAAnB,EAAAoB,cAACG,EAAA,EAAD,KACEJ,EAAAnB,EAAAoB,cAACgC,EAAD,CAAKC,KAAK,KACRlC,EAAAnB,EAAAoB,cAACkC,EAAD,CACED,KAAK,IACL/E,SAAUM,EAAMN,SAChBR,UAAWc,EAAMd,YAEnBqD,EAAAnB,EAAAoB,cAACkC,EAAD,CACED,KAAK,aACL/E,SAhBwB,IAA1BM,EAAMN,SAASmC,OAAqB,GACjC7B,EAAMd,UAAUgF,IAAI,SAAAJ,GAAS,OAClC9D,EAAMN,SAAS2E,KAAK,SAAAM,GAAC,OAAIA,EAAElE,KAAOqD,MAe9B5E,UAAWc,EAAMd,eCrBrB0F,SACJrC,EAAAnB,EAAAoB,cLwCoB,SAAAqC,GAAS,IAAAC,EAIHC,qBAAWhF,EAASN,GAJjBuF,EAAA5E,OAAA6E,EAAA,EAAA7E,CAAA0E,EAAA,GAKvBI,EAAQ,CAAElF,MALagF,EAAA,GAKNjE,SALMiE,EAAA,IAO7B,OAAOzC,EAAAnB,EAAAoB,cAACjD,EAAM4F,SAAP,CAAgBD,MAAOA,GAAQL,EAAMjE,WK/C5C,KACE2B,EAAAnB,EAAAoB,cAAC4C,EAAD,QAIJC,IAASC,OAAOV,EAAeW,SAASC,eAAe","file":"static/js/main.288d6895.chunk.js","sourcesContent":["import React, { createContext, useReducer } from 'react';\n\n// get/set favorites in local browser storage\nconst getFavorites = favorites => {\n  const result = localStorage.getItem('favorites');\n  if (!result) return [];\n  return JSON.parse(result);\n};\n\nconst setFavorites = favorites => {\n  return localStorage.setItem('favorites', JSON.stringify(favorites));\n};\n\n// Store object\n// The context object to which child components will subscribe.\n// Created via the React.createContext() function\nconst Store = createContext();\n\nconst initialState = {\n  episodes: [],\n  favorites: getFavorites()\n};\n\n// reducer function\n// Input: state, action\n// Output: updated state object, updated localStorage\nconst reducer = (state, action) => {\n  let favorites;\n  switch (action.type) {\n    case 'ADD_FAVORITE':\n      favorites = [...state.favorites, action.payload];\n      setFavorites(favorites);\n      return { ...state, favorites };\n    case 'FETCH_EPISODES':\n      return { ...state, episodes: action.payload };\n    case 'REMOVE_FAVORITE':\n      favorites = state.favorites.filter(id => id !== action.payload);\n      setFavorites(favorites);\n      return { ...state, favorites };\n    default:\n      return state;\n  }\n};\n\n// The StoreProvider stores the data for our app, and provides data to consumers.\n// It encapsulates all other components in the application.\n// Input: props (so we can access child components)\nconst StoreProvider = props => {\n  // useReducer, a React Hook\n  // Input: reducer (updates state based on an action), initialState\n  // Output: state, dispatch\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const value = { state, dispatch };\n\n  return <Store.Provider value={value}>{props.children}</Store.Provider>;\n};\n\nexport { Store, StoreProvider };\n\nexport default Store;\n","import { Link } from '@reach/router';\nimport React, { useContext, useEffect } from 'react';\nimport Store from './Store';\n\nconst App = ({ children }) => {\n  const { state, dispatch } = useContext(Store);\n\n  const fetchEpisodes = async () => {\n    if (state.episodes.length > 0) return false;\n    const url =\n      'https://api.tvmaze.com/singlesearch/shows?q=futurama&embed=episodes';\n    const data = await fetch(url);\n    const json = await data.json();\n    const action = {\n      type: 'FETCH_EPISODES',\n      payload: json._embedded.episodes\n    };\n    return dispatch(action);\n  };\n\n  // useEffect React Hook\n  // fetch episodes when page loads (similar to componentDidMount class lifecycle method)\n  useEffect(() => {\n    fetchEpisodes();\n  });\n\n  return (\n    <>\n      <header className=\"header\">\n        <div>\n          <h1>Futurama</h1>\n          <p>Pick your favorite episodes</p>\n        </div>\n        <ul className=\"navigation\">\n          <li>\n            <Link to=\"/\">All Episodes</Link>\n          </li>\n          <li>\n            <Link to=\"/favorites\">{state.favorites.length} Favorite(s)</Link>\n          </li>\n        </ul>\n      </header>\n\n      {children}\n    </>\n  );\n};\n\nexport default App;\n","import React, { useContext } from 'react';\nimport Store from './Store';\n\nconst Episode = ({ data, favorite }) => {\n  const { state, dispatch } = useContext(Store);\n\n  const classes = () => {\n    let result = ['episode-box'];\n    if (favorite) {\n      result.push('episode-favorite');\n    }\n    return result.join(' ');\n  };\n\n  const seasonAndEpisodeNumber = () => {\n    return `S${zeroPad(data.season)}E${zeroPad(data.number)}`;\n  };\n\n  const toggleFavorite = episodeId => {\n    let action = { payload: episodeId };\n    if (state.favorites.includes(episodeId)) {\n      action.type = 'REMOVE_FAVORITE';\n    } else {\n      action.type = 'ADD_FAVORITE';\n    }\n    return dispatch(action);\n  };\n\n  const zeroPad = (number, size = 2) => {\n    let result = number.toString();\n    while (result.length < size) {\n      result = `0${result}`;\n    }\n    return result;\n  };\n\n  return (\n    <section className={classes()}>\n      <img src={data.image.medium} alt={`Futurama episode: ${data.name}`} />\n      <div>{data.name}</div>\n      <section className=\"episode-details\">\n        <div>{seasonAndEpisodeNumber()}</div>\n        <button type=\"button\" onClick={() => toggleFavorite(data.id)}>\n          {favorite ? 'UnFavorite' : 'Add Favorite'}\n        </button>\n      </section>\n    </section>\n  );\n};\n\nexport default Episode;\n","import React from 'react';\nimport Episode from './Episode';\n\nconst EpisodeList = ({ episodes, favorites }) => {\n  const isFavorite = episodeId => {\n    return favorites.find(id => id === episodeId);\n  };\n\n  return (\n    <section className=\"episode-layout\">\n      {episodes.map(episode => (\n        <Episode\n          data={episode}\n          favorite={isFavorite(episode.id)}\n          key={episode.id}\n        />\n      ))}\n      ;\n    </section>\n  );\n};\n\nexport default EpisodeList;\n","import { Router } from '@reach/router';\nimport App from './App';\nimport EpisodeList from './EpisodeList';\nimport React, { useContext } from 'react';\nimport Store from './Store';\n\nconst Root = () => {\n  const { state } = useContext(Store);\n\n  const favoriteEpisodes = () => {\n    if (state.episodes.length === 0) return [];\n    return state.favorites.map(episodeId =>\n      state.episodes.find(e => e.id === episodeId)\n    );\n  };\n\n  return (\n    <Router>\n      <App path=\"/\">\n        <EpisodeList\n          path=\"/\"\n          episodes={state.episodes}\n          favorites={state.favorites}\n        />\n        <EpisodeList\n          path=\"/favorites\"\n          episodes={favoriteEpisodes()}\n          favorites={state.favorites}\n        />\n      </App>\n    </Router>\n  );\n};\n\nexport default Root;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './Root';\nimport { StoreProvider } from './Store';\nimport './index.css';\n\nconst componentTree = (\n  <StoreProvider>\n    <Root />\n  </StoreProvider>\n);\n\nReactDOM.render(componentTree, document.getElementById('root'));\n"],"sourceRoot":""}